---
title: "Learning Reflection"
subtitle: "Week 2"
format: html
editor: visual
---

# Learning reflections

Learning reflections are part of your weekly homework and have a weight of 20% of your final grade. Write a reflection in your own words on the different parts of the weeks material below. You can also use your learning reflections as a notebook as you work through exercises or readings. Write as much as you like, but a minimum of 100 words in total.

# Lecture

I found it fascinating to learn that Data Science follows a structured lifecycle: from data import, tidying, and transformation, to visualisation and communication. This cycle highlights how comprehensive and systematic proper data analysis can be. Compared to tools like Google Sheets, which often feel basic in itsÂ  approach, working through the full data science cycle leads to cleaner, more accurate, and insightful outcomes. I mean, right now creating the codes is still challenging but I am sure with more practice and experience from the coming classes, using R will be easier and fun.

Homework Assignment

Symbols like pipe operators, commas and assign operators are used to connect variables.

Functions are crucial in R, for example:

Mutate - Is used to derive specific variables from a data set. These specific data sets can also be used to plot graphs.

The plots can also be customized using:

box_plot(x,y)

labs() to label the axis

theme_minimal() for a clear visual theme

color () for defined colors in the plot variables

# Readings

Values that are each associated with a variable and an observation are referred to as rectangular data, and are common in R.

R uses packages, that is, a collection of functions such as, tidyverse.

dput() is used to run data in R, that is data that has been imported to to R.

Note: R codes should be easy for other people to comprehend.

library() is used to rerun packages installed in R. For example,

library(tidyverse)

*To be continued*

## Stage, Commit & Push to GitHub

This final section introduces the workflow you need to follow at the end of each live coding exercise, homework assignment, learning reflection. It ensures that all the changes you have made to files in this repository (folder) are synced with the version that is stored on GitHub. The steps will be described at the end of each of the files.

1.  Open the Git pane in RStudio. It's in the top right corner in a separate tab.
2.  **Stage** your changes by checking appropriate box next to all files (if you select one file with your mouse, you can then highlight them all with Ctrl + A on your keyboard and check all boxes)
3.  Write a meaningful commit message (e.g. "Completed week 2 learning reflection") in the **Commit message** box
4.  Click **Commit**. Note that every commit needs to have a commit message associated with it.
5.  Click **Push** to send your changes to GitHub.
6.  Go to your wk-02-USERNAME GitHub repo (where USERNAME is your GitHub username) and refresh the page. You should see your commit message next to the updated files.

## Open an issue on GitHub

Once you have ensured that the Quarto document renders without errors and you have pushed all your changes to GitHub, it is to complete the assignment by opening an issue on your wk-02-USERNAME GitHub repo (where USERNAME is your GitHub username).

1.  Navigate to your wk-02-USERNAME GitHub repo (where USERNAME is your GitHub username).
2.  Click on **Issues**, and then **New issue** button.
3.  Write a meaningful title in the **Title** field
4.  Tag the course instructor with using the `@` sign in combination with `larnsce` as the username
5.  Add any questions or comments
